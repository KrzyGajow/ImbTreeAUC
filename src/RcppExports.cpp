// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// wAUC_sorted
double wAUC_sorted(const NumericVector& x, const LogicalVector& y, const NumericVector& w);
RcppExport SEXP _ImbTreeAUC_wAUC_sorted(SEXP xSEXP, SEXP ySEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const LogicalVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(wAUC_sorted(x, y, w));
    return rcpp_result_gen;
END_RCPP
}
// AUC_sorted
double AUC_sorted(const NumericVector& x, const LogicalVector& y);
RcppExport SEXP _ImbTreeAUC_AUC_sorted(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const LogicalVector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(AUC_sorted(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ImbTreeAUC_wAUC_sorted", (DL_FUNC) &_ImbTreeAUC_wAUC_sorted, 3},
    {"_ImbTreeAUC_AUC_sorted", (DL_FUNC) &_ImbTreeAUC_AUC_sorted, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ImbTreeAUC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
